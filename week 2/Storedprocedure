

-- SCENARIO 1

CREATE OR REPLACE PROCEDURE ProcessMonthlyInterest AS
BEGIN
    FOR acc IN (
        SELECT AccountID, Balance 
        FROM Accounts 
        WHERE AccountType = 'Savings'
    ) LOOP
        UPDATE Accounts
        SET Balance = Balance + (acc.Balance * 0.01)
        WHERE AccountID = acc.AccountID;

        DBMS_OUTPUT.PUT_LINE('✔ 1% interest credited to Savings Account #' || acc.AccountID);
    END LOOP;

    COMMIT;
END;
/


BEGIN
    ProcessMonthlyInterest;
END;
/

SELECT AccountID, AccountType, Balance FROM Accounts WHERE AccountType = 'Savings';


-- SCENARIO 2:


CREATE OR REPLACE PROCEDURE UpdateEmployeeBonus (
    p_department IN VARCHAR2,
    p_bonus_percent IN NUMBER
) AS
BEGIN
    FOR emp IN (
        SELECT EmployeeID, Name, Salary 
        FROM Employees 
        WHERE Department = p_department
    ) LOOP
        UPDATE Employees
        SET Salary = Salary + (emp.Salary * p_bonus_percent / 100)
        WHERE EmployeeID = emp.EmployeeID;

        DBMS_OUTPUT.PUT_LINE('💼 Bonus of ' || p_bonus_percent || '% added for employee ' || emp.Name || 
                             '. New estimated salary: ₹' || TO_CHAR(emp.Salary + (emp.Salary * p_bonus_percent / 100)));
    END LOOP;

    COMMIT;
END;
/


BEGIN
    UpdateEmployeeBonus('HR', 10);
END;
/


SELECT * FROM Employees WHERE Department = 'HR';


-- SCENARIO 3

CREATE OR REPLACE PROCEDURE TransferFunds (
    p_from_account IN NUMBER,
    p_to_account IN NUMBER,
    p_amount IN NUMBER
) AS
    v_from_balance Accounts.Balance%TYPE;
BEGIN

    SELECT Balance INTO v_from_balance
    FROM Accounts
    WHERE AccountID = p_from_account;

    
    IF v_from_balance < p_amount THEN
        DBMS_OUTPUT.PUT_LINE('⚠ Transfer declined: Account #' || p_from_account || ' has insufficient balance.');
    ELSE
        
        UPDATE Accounts
        SET Balance = Balance - p_amount
        WHERE AccountID = p_from_account;

        UPDATE Accounts
        SET Balance = Balance + p_amount
        WHERE AccountID = p_to_account;

        DBMS_OUTPUT.PUT_LINE('💸 ₹' || p_amount || ' successfully transferred from Account #' || p_from_account ||
                             ' to Account #' || p_to_account || '.');
        COMMIT;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('❌ Error: One or both account numbers are invalid.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('❌ Unexpected error during transfer: ' || SQLERRM);
END;
/

BEGIN
    TransferFunds(1, 2, 500); 
END;
/

SELECT AccountID, CustomerID, AccountType, Balance FROM Accounts;
